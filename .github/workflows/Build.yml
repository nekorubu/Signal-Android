# Original script written by JohnBetaro
name: Build

on:
  push:
    branches-ignore:
    - main

permissions:
  contents: write # to fetch code (actions/checkout) then release/upload.

jobs:
  build:

    runs-on: ubuntu-20.04
    strategy:
      fail-fast: false

    steps:
    - uses: actions/checkout@v3

    - name: set up JDK 17
      uses: actions/setup-java@v3
      with:
        distribution: temurin
        java-version: 17
        cache: gradle

    - name: Validate Gradle Wrapper
      uses: gradle/wrapper-validation-action@v1

    - name: Build with Gradle
      run: ./gradlew assemblePlayProdRelease --parallel

    - name: Get version
      id: get-version
      run: echo ::set-output name=VERSION::${GITHUB_REF#refs/heads/}

    - name: Sign APKs
      env:
        # If you want to generate a keystore secret, run these commands:
        # keytool -genkey -v -keystore apksign.keystore -alias apksign -keyalg RSA -keysize 4096
        # cat apksign.keystore | base64
        KEYSTORE_BASE64: ${{ secrets.KEYSTORE }}
        KEYSTORE_PASS: ${{ secrets.PASS }}
        KEYSTORE_ALIAS: ${{ secrets.ALIAS }}
      run: |
        echo "${KEYSTORE_BASE64}" | base64 -d > apksign.keystore
        for apk in app/build/outputs/apk/playProd/release/*-unsigned-*.apk; do
        out=${apk/-unsigned-/-signed-}
        ${ANDROID_HOME}/build-tools/30.0.2/apksigner sign --ks apksign.keystore --ks-pass env:KEYSTORE_PASS --ks-key-alias ${KEYSTORE_ALIAS} --out "${out}" "${apk}"
        echo "$(sha256sum ${out})"
        done
        rm apksign.keystore
      
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: "v${{ steps.get-version.outputs.VERSION }}"
        release_name: "${{ steps.get-version.outputs.VERSION }}"
        draft: false
        prerelease: false

    - name: Get Universal APK Filename
      id: get-universal-filename
      run: echo ::set-output name=FILENAME::$(basename $(ls -1 app/build/outputs/apk/playProd/release/*-universal-*-signed-*.apk) )

    - name: Upload Universal APK
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: "app/build/outputs/apk/playProd/release/${{ steps.get-universal-filename.outputs.FILENAME }}"
        asset_name: ${{ steps.get-universal-filename.outputs.FILENAME }}
        asset_content_type: application/vnd.android.package-archive

    - name: Archive reports for failed build
      if: ${{ failure() }}
      uses: actions/upload-artifact@v3
      with:
        name: reports
        path: '*/build/reports'
